/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clickitserver;

import io.github.davidg95.clickitapi.Camera;
import io.github.davidg95.clickitapi.Lens;
import io.github.davidg95.productapi.Product;
import io.github.davidg95.productapi.ProductNotFoundException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class ProductListWindow extends javax.swing.JFrame {

    private static JFrame frame;

    private final Data data;

    private final DefaultTableModel model;

    /**
     * Creates new form ProductListWindow
     *
     * @param data List of products to show.
     */
    public ProductListWindow(Data data) {
        this.data = data;
        initComponents();
        model = (DefaultTableModel) tblProducts.getModel();
        updateList();
    }

    /**
     * Method to update the list.
     */
    public final void updateList() {

        model.setRowCount(0);

        List<Product> products = data.getAllProducts();

        String[] items = new String[products.size()];

        for (int i = 0; i <= (items.length - 1); i++) {
            items[i] = "<html><pre>" + products.get(i).getCode() + "\t\t" + products.get(i).getName() + ((products.get(i).getName()).length() < 17 ? "\t\t" : "\t") + products.get(i).getStock() + "\t" + products.get(i).getPrice() + "</pre></html>";
            Object[] s = new Object[]{products.get(i).getCode(), products.get(i).getName(), products.get(i).getStock(), products.get(i).getPrice()};
            model.addRow(s);
        }

        tblProducts.setModel(model);
    }

    /**
     * Method to show the list of products.
     *
     * @param data List of products.
     */
    public static void showProductListWindow(Data data) {
        frame = new ProductListWindow(data);
        frame.setVisible(true);
    }

    public void editProduct() {
        int selectedRow = tblProducts.getSelectedRow();
        if (selectedRow != -1) {
            Product p = data.getAllProducts().get(selectedRow);
            if (p instanceof Camera) {
                p = EditCameraDialog.showEditCameraDialog((Camera) p);
            } else if (p instanceof Lens) {
                p = EditLensDialog.showEditLensDialog((Lens) p);
            }
            try {
                data.updateProduct(p);
            } catch (ProductNotFoundException ex) {

            }
            updateList();
        } else {
            JOptionPane.showMessageDialog(this, "Select a product", "Edit Product", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddProduct = new javax.swing.JButton();
        btnRemoveProduct = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        btnEditProduct = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Products");

        btnAddProduct.setText("Add New Product");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        btnRemoveProduct.setText("Remove Product");
        btnRemoveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProductActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Code", "Name", "Stock", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProducts);

        btnEditProduct.setText("Edit Product");
        btnEditProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProductActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddProduct)
                    .addComponent(btnRemoveProduct)
                    .addComponent(btnClose)
                    .addComponent(btnEditProduct)
                    .addComponent(btnSearch))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        Product product = AddProductGUI.showAddProductDialog();
        if (product != null) {
            data.addProduct(product);
            updateList();
        }
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void btnRemoveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProductActionPerformed
        if (tblProducts.getSelectedRow() != -1) {
            Product p = data.getAllProducts().get(tblProducts.getSelectedRow());
            if (JOptionPane.showConfirmDialog(this, "Are you sure you want to remove product " + p.getCode() + "?", "Remove Product", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                try {
                    data.deleteProduct(p.getCode());
                    updateList();
                } catch (ProductNotFoundException ex) {

                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select a product", "Delete Product", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveProductActionPerformed

    private void btnEditProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProductActionPerformed
        editProduct();
    }//GEN-LAST:event_btnEditProductActionPerformed

    private void tblProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsMouseClicked
        if (evt.getClickCount() == 2) {
            editProduct();
        }
    }//GEN-LAST:event_tblProductsMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        DefaultTableModel searchModel = (DefaultTableModel) tblProducts.getModel();
        String search = JOptionPane.showInputDialog(this, "Enter search terms", "Search", JOptionPane.PLAIN_MESSAGE);
        searchModel.setRowCount(0);
        data.getAllProducts().stream().filter((p) -> (p.getName().toLowerCase().contains(search.toLowerCase()))).map((p) -> new Object[]{p.getCode(), p.getName(), p.getStock(), p.getPrice()}).forEach((s) -> {
            searchModel.addRow(s);
        });
        tblProducts.setModel(searchModel);
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEditProduct;
    private javax.swing.JButton btnRemoveProduct;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProducts;
    // End of variables declaration//GEN-END:variables
}
