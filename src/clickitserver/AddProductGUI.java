/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clickitserver;

import io.github.davidg95.clickitapi.Camera;
import io.github.davidg95.clickitapi.Lens;
import io.github.davidg95.productapi.Product;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;

/**
 * The dialog to create a new product.
 *
 * @author 1301480
 */
public class AddProductGUI extends javax.swing.JDialog {

    private static JDialog dialog;
    private static Product product;

    /**
     * Creates new form AddProductGUI
     */
    public AddProductGUI() {
        initComponents();
        panelMain.setBorder(new TitledBorder("Product Details"));
        panelCamera.setBorder(new TitledBorder("Camera"));
        panelLens.setBorder(new TitledBorder("Lens"));
        this.setLocationRelativeTo(null);
        this.setModal(true);
    }

    public static Product showAddProductDialog() {
        dialog = new AddProductGUI();

        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

        product = null;

        dialog.setVisible(true);

        return product;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpSensor = new javax.swing.ButtonGroup();
        btngrpProduct = new javax.swing.ButtonGroup();
        cmdClear = new javax.swing.JButton();
        cmdAdd = new javax.swing.JButton();
        cmdClose = new javax.swing.JButton();
        panelMain = new javax.swing.JPanel();
        txtMake = new javax.swing.JTextField();
        lblMake = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        radCamera = new javax.swing.JRadioButton();
        radLens = new javax.swing.JRadioButton();
        panelCamera = new javax.swing.JPanel();
        txtMegapixles = new javax.swing.JTextField();
        lblMegapixles = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        lblModel = new javax.swing.JLabel();
        lblSensor = new javax.swing.JLabel();
        radCrop = new javax.swing.JRadioButton();
        radFull = new javax.swing.JRadioButton();
        panelLens = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFocMin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFocMax = new javax.swing.JTextField();
        txtFMax = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFMin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chkFull = new javax.swing.JCheckBox();
        chkVR = new javax.swing.JCheckBox();
        chkMacro = new javax.swing.JCheckBox();
        chkAF = new javax.swing.JCheckBox();

        setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        setTitle("Add New Product");
        setLocationByPlatform(true);
        setMinimumSize(null);
        setResizable(false);

        cmdClear.setText("Clear");
        cmdClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearActionPerformed(evt);
            }
        });

        cmdAdd.setText("Add");
        cmdAdd.setEnabled(false);
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        cmdClose.setText("Close");
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        panelMain.setMaximumSize(new java.awt.Dimension(332, 73));
        panelMain.setMinimumSize(new java.awt.Dimension(332, 73));

        txtMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMakeActionPerformed(evt);
            }
        });

        lblMake.setText("Make:");

        lblStock.setText("Initial Stock:");

        txtStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockActionPerformed(evt);
            }
        });

        lblPrice.setText("Price:");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        btngrpProduct.add(radCamera);
        radCamera.setText("Camera");
        radCamera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCameraActionPerformed(evt);
            }
        });

        btngrpProduct.add(radLens);
        radLens.setText("Lens");
        radLens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radLensActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblStock)
                    .addComponent(lblMake))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMake)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(lblPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(radCamera)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radLens)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMake)
                    .addComponent(txtMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStock)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radCamera)
                    .addComponent(radLens))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCamera.setEnabled(false);
        panelCamera.setMaximumSize(new java.awt.Dimension(195, 89));
        panelCamera.setMinimumSize(new java.awt.Dimension(195, 89));

        txtMegapixles.setEnabled(false);
        txtMegapixles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMegapixlesActionPerformed(evt);
            }
        });

        lblMegapixles.setText("Megapixles:");

        txtModel.setEnabled(false);
        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        lblModel.setText("Model:");

        lblSensor.setText("Sensor:");

        btngrpSensor.add(radCrop);
        radCrop.setText("Crop");
        radCrop.setEnabled(false);

        btngrpSensor.add(radFull);
        radFull.setText("Full");
        radFull.setEnabled(false);

        javax.swing.GroupLayout panelCameraLayout = new javax.swing.GroupLayout(panelCamera);
        panelCamera.setLayout(panelCameraLayout);
        panelCameraLayout.setHorizontalGroup(
            panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCameraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCameraLayout.createSequentialGroup()
                        .addComponent(lblMegapixles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMegapixles, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCameraLayout.createSequentialGroup()
                        .addGroup(panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSensor)
                            .addComponent(lblModel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelCameraLayout.createSequentialGroup()
                                .addComponent(radCrop)
                                .addGap(18, 18, 18)
                                .addComponent(radFull))
                            .addComponent(txtModel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCameraLayout.setVerticalGroup(
            panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCameraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMegapixles)
                    .addComponent(txtMegapixles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSensor)
                    .addComponent(radCrop)
                    .addComponent(radFull))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelLens.setMaximumSize(new java.awt.Dimension(197, 163));
        panelLens.setMinimumSize(new java.awt.Dimension(197, 163));
        panelLens.setName(""); // NOI18N

        jLabel1.setText("Focal Range:");

        txtFocMin.setEnabled(false);

        jLabel2.setText("-");

        txtFocMax.setEnabled(false);

        txtFMax.setEnabled(false);

        jLabel3.setText("Aperture:");

        txtFMin.setEnabled(false);

        jLabel4.setText("-");

        chkFull.setText("Full Frame Format");
        chkFull.setEnabled(false);

        chkVR.setText("Vibration Reduction");
        chkVR.setEnabled(false);

        chkMacro.setText("Macro");
        chkMacro.setEnabled(false);

        chkAF.setText("Auto Focus");
        chkAF.setEnabled(false);

        javax.swing.GroupLayout panelLensLayout = new javax.swing.GroupLayout(panelLens);
        panelLens.setLayout(panelLensLayout);
        panelLensLayout.setHorizontalGroup(
            panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLensLayout.createSequentialGroup()
                        .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFocMin, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(txtFMin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFocMax, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(txtFMax)))
                    .addGroup(panelLensLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkVR)
                            .addComponent(chkMacro)
                            .addComponent(chkAF)
                            .addComponent(chkFull))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLensLayout.setVerticalGroup(
            panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFocMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtFocMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtFMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkVR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMacro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkAF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFull)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(cmdClear)
                            .addGap(113, 113, 113)
                            .addComponent(cmdAdd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdClose))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(panelCamera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(panelLens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelCamera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdAdd)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmdClear)
                        .addComponent(cmdClose)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method to listen for the add button being pressed.
     *
     * @param evt the event of the button being pressed.
     */
    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed
        String make;
        String model;
        int stock;
        double price;

        double megapixles;
        boolean full;

        int min_mm;
        int max_mm;
        double min_f;
        double max_f;
        boolean isFull;
        boolean hasVR;
        boolean isMacro;
        boolean hasAF;

        try {
            if (radCamera.isSelected()) {
                make = this.txtMake.getText();
                model = this.txtModel.getText();
                megapixles = Double.parseDouble(this.txtMegapixles.getText());
                full = this.radFull.isSelected();
                stock = Integer.parseInt(this.txtStock.getText());
                price = Double.parseDouble(this.txtPrice.getText());

                product = new Camera(make, make + " " + model, megapixles, full, stock, price);

                this.setVisible(false);
            } else if (radLens.isSelected()) {
                make = this.txtMake.getText();
                stock = Integer.parseInt(this.txtStock.getText());
                price = Double.parseDouble(this.txtPrice.getText());
                
                min_mm = Integer.parseInt(txtFocMin.getText());
                max_mm = Integer.parseInt(txtFocMax.getText());
                min_f = Double.parseDouble(txtFMin.getText());
                max_f = Double.parseDouble(txtFMax.getText());
                isFull = this.chkFull.isSelected();
                hasVR = this.chkVR.isSelected();
                isMacro = this.chkMacro.isSelected();
                hasAF = this.chkAF.isSelected();
                
                product = new Lens(make, min_mm, max_mm, min_f, max_f, isFull, hasVR, isMacro, hasAF, price, stock);
                
                this.setVisible(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Some fields were left blank or have not been filled in correctly");
        }
    }//GEN-LAST:event_cmdAddActionPerformed

    /**
     * Method to listen for the close button being pressed.
     *
     * @param evt the event of the button being pressed.
     */
    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_cmdCloseActionPerformed

    /**
     * Method to listen for the clear button being pressed.
     *
     * @param evt the event of the clear button being pressed.
     */
    private void cmdClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearActionPerformed
        this.txtMake.setText("");
        this.txtModel.setText("");
        this.txtMegapixles.setText("");
        if (radCrop.isSelected()) {
            radCrop.setSelected(false);
        }
        if (radFull.isSelected()) {
            radFull.setSelected(false);
        }
        this.txtStock.setText("");
        this.txtPrice.setText("");
        this.txtFocMin.setText("");
        this.txtFocMax.setText("");
        this.txtFMin.setText("");
        this.txtFMax.setText("");
        this.chkVR.setSelected(false);
        this.chkMacro.setSelected(false);
        this.chkAF.setSelected(false);
        this.chkFull.setSelected(false);
        this.radCamera.setSelected(false);
        this.radLens.setSelected(false);
        this.txtModel.setEnabled(false);
        this.txtMegapixles.setEnabled(false);
        this.radCrop.setEnabled(false);
        this.radFull.setEnabled(false);
        this.txtFocMin.setEnabled(false);
        this.txtFocMax.setEnabled(false);
        this.txtFMin.setEnabled(false);
        this.txtFMax.setEnabled(false);
        this.chkVR.setEnabled(false);
        this.chkMacro.setEnabled(false);
        this.chkAF.setEnabled(false);
        this.chkFull.setEnabled(false);
        this.cmdAdd.setEnabled(false);
    }//GEN-LAST:event_cmdClearActionPerformed

    private void txtMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMakeActionPerformed
        cmdAdd.doClick();
    }//GEN-LAST:event_txtMakeActionPerformed

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        cmdAdd.doClick();
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtMegapixlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMegapixlesActionPerformed
        cmdAdd.doClick();
    }//GEN-LAST:event_txtMegapixlesActionPerformed

    private void txtStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockActionPerformed
        cmdAdd.doClick();
    }//GEN-LAST:event_txtStockActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        cmdAdd.doClick();
    }//GEN-LAST:event_txtPriceActionPerformed

    private void radCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCameraActionPerformed
        txtMegapixles.setEnabled(true);
        radCrop.setEnabled(true);
        radFull.setEnabled(true);
        txtModel.setEnabled(true);
        txtFocMin.setEnabled(false);
        txtFocMax.setEnabled(false);
        txtFMin.setEnabled(false);
        txtFMax.setEnabled(false);
        chkFull.setEnabled(false);
        chkVR.setEnabled(false);
        chkMacro.setEnabled(false);
        chkAF.setEnabled(false);
        cmdAdd.setEnabled(true);
    }//GEN-LAST:event_radCameraActionPerformed

    private void radLensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radLensActionPerformed
        txtMegapixles.setEnabled(false);
        radCrop.setEnabled(false);
        radFull.setEnabled(false);
        txtModel.setEnabled(false);
        txtFocMin.setEnabled(true);
        txtFocMax.setEnabled(true);
        txtFMin.setEnabled(true);
        txtFMax.setEnabled(true);
        chkFull.setEnabled(true);
        chkVR.setEnabled(true);
        chkMacro.setEnabled(true);
        chkAF.setEnabled(true);
        cmdAdd.setEnabled(true);
    }//GEN-LAST:event_radLensActionPerformed

    /**
     * Method to close the form.
     */
    private void closeForm() {
        this.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngrpProduct;
    private javax.swing.ButtonGroup btngrpSensor;
    private javax.swing.JCheckBox chkAF;
    private javax.swing.JCheckBox chkFull;
    private javax.swing.JCheckBox chkMacro;
    private javax.swing.JCheckBox chkVR;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdClear;
    private javax.swing.JButton cmdClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblMake;
    private javax.swing.JLabel lblMegapixles;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSensor;
    private javax.swing.JLabel lblStock;
    private javax.swing.JPanel panelCamera;
    private javax.swing.JPanel panelLens;
    private javax.swing.JPanel panelMain;
    private javax.swing.JRadioButton radCamera;
    private javax.swing.JRadioButton radCrop;
    private javax.swing.JRadioButton radFull;
    private javax.swing.JRadioButton radLens;
    private javax.swing.JTextField txtFMax;
    private javax.swing.JTextField txtFMin;
    private javax.swing.JTextField txtFocMax;
    private javax.swing.JTextField txtFocMin;
    private javax.swing.JTextField txtMake;
    private javax.swing.JTextField txtMegapixles;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
